What do I need to know to help?

If you are looking to help to with a code contribution our project uses Python 3.9 and discord.py library as well as wavelink. If you don't feel ready to make a code contribution yet, no problem! You can also check out the issue tracker at https://github.com/pieckenst/helia/issues.

If you are interested in making a code contribution and would like to learn more about the technologies that we use, check out the list below.
Discord py tutorials 
https://www.youtube.com/watch?v=F1HbEOp-jdg&list=PLYeOw6sTSy6ZGyygcbta7GcpI8a5-Cooc
Python tutorial
https://www.youtube.com/watch?v=QXeEoD0pB3E&list=PLsyeobzWxl7poL9JTVyndKe62ieoN-MZ3

How do I make a contribution?

Never made an open source contribution before? Wondering how contributions work in the in our project? Here's a quick rundown!
1. Find an issue that you are interested in addressing or a feature that you would like to add.
2. Fork this repository - this means that you will have a copy of the repository under your-GitHub-username/helia
3. Clone your fork to your local machine using git clone https://github.com/your-github-username/helia.git
4. Make the appropriate changes in the code if fixing an issue or if adding a feature follow this list of checkboxes to make sure it fits in nicely.
{Dont add your feature to the main.py file! Make it a cog insted - the only thing you should do is add your new feature cog into "startup_extensions = [" list inside main.py
Please test it also
}
5.Use git add insert-paths-of-changed-files-here to add the file contents of the changed files to the "snapshot" git uses to manage the state of the project, also known as the index.
6. Use git commit -m "Insert a short message of the changes made here" to store the contents of the index with a descriptive message.
7. Push the changes to the remote repository using git push origin master.
8. Create an issue using Fix for issue #issuenumber template 
9. Submit a pull request to the upstream repository and link it in the issue you created.
10. Title the pull request with a short description of the feature you made if adding a feature to the bot or if fixing an issue please list the issue or bug number associated with your change 
   For example, you can title a fix for an issue like so "Added/Changed "list code change" to resolve #issue number".
11. In the description of the pull request, explain the changes that you made/ or the description and code changes made if adding a feature, any issues you think exist with the pull request you made, and any questions you have for the maintainer. It's OK if your pull request is not perfect (no pull request is), the reviewer will be able to help you fix any problems and improve it!
12. Wait for the pull request to be reviewed by a maintainer.
13. Make changes to the pull request if the reviewing maintainer recommends them.
14. Congrats ya made a pull request to our bot !

To add your name in the contributing list you can read the guide here https://allcontributors.org/docs/en/bot/usage
